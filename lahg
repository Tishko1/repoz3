Java

1

Одного разу ведучий на весіллі вирішив розважити гостей і встановив правило: кожен гість вимовляє тост, і всі присутні п'ють за здоров'я молодих.
Наприклад:
•	коли приходить перший гість, він п'є на самоті;
•	коли приходить другий — п'ють удвох;
•	третій — п'ють утрьох і так далі.
Якщо гостей 5, то всього знадобиться 15 порцій (1 + 2 + 3 + 4 + 5).
Якщо 10, то 55 порцій (1 + 2 + 3 + ... + 10).
Реалізуй метод getDrinks(), який приймає int numberOfGuests — скільки всього буде гостей, і повертає необхідну кількість порцій.
Ще приклади:
getDrinks(0); // 0 - нема гостей - нема порцій;
getDrinks(2); // 1 + 2 = 3;


public class GetDrinks {
  public static int getDrinks(int guestNumber) {
    int count =0;
    if (guestNumber!=0) {
        
      for (int i=1; i <= guestNumber ; i = i + 1){
      count += i;
      
      }
      return count;
    }
    else { 
      return 0;
      }
  }
}

2

Сума податку залежить від розміру доходу:
•	до 1000 грн включно - податок 2% від доходу;
•	від 1000 грн до 10000 грн включно - податок 3% від доходу;
•	понад 10000 грн - податок 5% від доходу.

calculateTaxes(900); // 900 * 0.02 = 18
calculateTaxes(5000); // 5000 * 0.03 = 150
calculateTaxes(10500); // 10500 * 0.05 = 525


public class CalculateTaxes {
  public static double calculateTaxes(double income) {
    if (income <=1000){
      return 0.02*income;
    }
      else if (income >1000 && income <=10000){
        return 0.03*income;
       }
    else {
      return 0.05*income;
    }
  }
}

Pyton

3

Одного разу тамада на весіллі вирішив розважити гостей, поки вони збираються, і встановив правило: як тільки приходить новий гість, всі п'ють разом за здоров'я молодят.
Давай допоможемо тамаді порахувати, скільки порцій випивки потрібно приготувати, і напишемо функцію get_drinks. Вона приймає ціле число number_of_guests і повертає необхідну кількість порцій випивки, щоб вистачило усім гостям.
Наприклад, якщо number_of_guests = 3, то знадобиться:
•	1 порція, коли прийде перший гість;
•	ще 2, коли прийде другий;
•	і ще 3, коли прийде третій.
Всього 1 + 2 + 3 = 6 порцій.
Пропонуємо скористатися циклом for і, коли приходить наступний гість, просто додавати те, що випили зараз, до того, що випили раніше


def get_drinks(number_of_guests: int) -> int:
    # write your code here
    amount = 0
    for i in range(0, number_of_guests + 1):
        amount += i
    return amount

4

Ведучий вирішив трохи змінити правила попередньої розваги. Молодята обирають число step, і тепер тост промовляє не кожен гість, а лише перший і кожен наступний, який приходить через обрану кількість гостей. Наприклад:
•	якщо step = 1, то, як і раніше, тост говорить кожен гість;
•	якщо step = 2, то 1-ий, 3-ій, 5-ий ...
•	якщо step = 3, то 1, 4, 7, 10 ...
Напиши функцію get_drinks_with_step, яка приймає number_of_guests і step та повертає кількість чарок, яку треба підготувати для конкурса.
Як і раніше, пропонуємо використати цикл for, але з range з трьома параметрами.
Приклади:
get_drinks_with_step(10, 3) == 22 # (1 + 4 + 7 + 10)
get_drinks_with_step(5, 3) == 5 # (1 + 4)
get_drinks_with_step(18, 10) == 12 # (1 + 11)



def get_drinks_with_step(number_of_guests: int, step: int) -> int:
    # write your code here
        amount = 0
        for i in range(1,number_of_guests + 1,step):
            amount += i
        return amount

5

За законом тільки повнолітні люди можуть купувати алкогольні напої.
Створи функцію can_buy_beer, яка приймає як параметр ціле число age:
•	якщо age більше або рівне 18, то вона повертає рядок You can buy beer
•	у всіх інших випадках повертає рядок You can not buy beer
Приклади:
can_buy_beer(17) == "You can not buy beer"
can_buy_beer(18) == "You can buy beer"
can_buy_beer(50) == "You can buy beer"
Підсказка: щоб повернути рядок, використовуй return
Розв'язок буде доступний після вирішення завдання. Або завтра, якщо вирішити не вдається.
def can_buy_beer(age: int) -> str:
    # write your code here
    if age >= 18:
        return "You can buy beer"
    else:
        return "You can not buy beer"   

6

Усі офіціанти люблять чайові та навіть оцінюють їх відповідно до секретного рейтингу!
Реалізуй функцію get_tips_rating, яка приймає суму чайових amount та повертає рядок-оцінку відповідно до залишеної суми:
•	terrible, якщо amount дорівнює 0 грн;
•	poor, якщо amount від 0 до 10 грн включно;
•	good, якщо amount від 10 до 20 грн включно;
•	great, якщо amount від 20 до 50 грн включно;
•	excellent, якщо amount більше 50 грн.

def get_tips_rating(amount: int) -> str:
    # write your code here
    if amount == 0:
        return "terrible"
    if amount <= 10:
        return "poor"
    if amount <= 20:
        return "good"
    if amount <= 50:
        return "great"   
    else:
        return "excellent" 

7

Ніхто не любить платити податки, але ми зобов'язані!
Ставка податку залежить від розміру твого доходу:
•	до 1000 грн включно - податок 2%;
•	від 1000 грн до 10000 грн включно - податок 3%;
•	все, що більше 10000 грн - податок 5%;
Напиши функцію calculate_taxes, яка приймає ціле число income (твій дохід) та повертає податок, який ти заплатиш.
def calculate_taxes(income: int) -> float:
    # write your code here
    
    if income <= 1000:
        return income*0.02
    if income <= 10000:
        return income*0.03
    else:
        return income*0.05 

